#!/bin/bash
#
# CentOS 6.3
#
# Configuration script for CentOS 6.3 to setup a web and mail server hosting
# multiple domains.  Built for Rackspace cloud servers but could easily be
# adapted for any CentOS 6.3 installation.  Built as fast, lightweight and
# secure as possible.
#
#   - Creates mail server at mail.example.com
#
# Author(s): Cody Buell
#
# Revisions: 2012.10.20 Initial framework.
#
# Requisite: CentOS 6.3
#            DNS Configured with FQDN
#
# Resources: <http://wiki.centos.org/HowTos/postfix_sasl>
#            <http://wiki.centos.org/AdditionalResources/Repositories/RPMForge>
#            <http://wiki.centos.org/HowTos/Amavisd>
#            <http://wiki.mediatemple.net/w/(ve):Install_Postfix_with_Dovecot_on_CentOS>
#            <http://www.howtoforge.com/virtual-users-and-domains-with-postfix-courier-mysql-and-squirrelmail-centos-6.2-x86_64>
#
# Task List: - create script to generate virtualhost conf files in httpd/conf.d
#            - create script to manage email accounts
#            - configure this script to work with other distros
#            - prompts to determine what to configure (apache, mail, both...)
#            - yum removes? network manager? managers?

####################
# Helper Functions #
####################

checks () {                                   # args: user path
  FUN=$(basename $0)                          # get function name
  LOC=`echo $0 | sed "s/${FUN}//"`            # get current location
  DIE=false                                   # default no errors
  [ `whoami` != $1 ] && {                     # check for correct user
    echo "error: $FUN must be run as $1"      # wrong user error message
    DIE=true                                  # register errors
  }
  [ "$0" != $2/$(basename $0) ] && {          # check for correct path
    echo "error: $FUN must be run from $LOC"  # wrong path error message
    DIE=true                                  # register errors
  }
  if $DIE; then                               # if error found then...
    exit 1                                    # drop out of script
  fi
}

prompt () {                           # args: 'prompt string' VARIABLE
  eval DEFAULT=\$$2                   # references an external default variable
  read -p "$1 [$DEFAULT] " NEWVALUE   # read answer into a temporary variable
  eval $2=${NEWVALUE:-$DEFAULT}       # param expan if null or unset use default
}

installTemplate () {                          # args: template target [chunk]
  TEM="$CURRDIR/templates/$1"                 # set template path
  cp -a $2 $2.orig                            # creat backup of original file
  if [ -z "$3" ]; then                        # if no chunk defined then...
    \cp $TEM $2                               # replace with the whole template
  else                                        # but if chunk is defined
    sed -n "/<${3}>/,/<\/${3}>/p" $TEM > $2   # replace with template chunk
    sed -i "/<${3}>/d;/<\/${3}>/d" $2         # clear out the tags
  fi
}

##################
# Initial Checks #
##################

checks root .

#######################
# Establish Variables #
#######################

CURRDIR=`pwd`
ADDRESS=`ifconfig | grep 'inet addr:' | grep -v '127.0.0.1' | cut -d: -f2 | awk 'NR==1 {print $1}'`
CONFIRM='no'
PS3='Enter Number > '

# setup a decent environment
export EDITOR='vi'

# establish defaults
USERNAME='admin'              # administrators account with sudo
GUID='615'                    # group and user id for admin
SSHPORT='22'                  # port to allow ssh in on
DOMAIN='example.com'          # primary domain name
ADMIN='admin@example.com'     # apache server admin email
PASSWD=''                     # mysql mail_admin password
PMPWD=''                      # postmaster email password
#MAILDIR='/var/mail/vhosts'   # add as option later
#VWEBDIR='/var/www/vhosts'    # add as option later
#SWEBDIR='/var/www/html'      # add as option later
#SERVICES='imap'              # add as option later (imap pop3)

# prompts
while [ $CONFIRM == "no" ]; do
  clear
  prompt "What username would you like?" USERNAME
  prompt "What is $USERNAME's uid and gid?" GUID
  prompt "What port would you like to use for ssh?" SSHPORT
  prompt "What is this systems short name?" HOSTNAME
  prompt "What is this systems domain name?" DOMAIN
  prompt "What is the server admins email?" ADMIN
  stty -echo
  prompt "Set a password for mysql mail_admin." PASSWD
  echo ""
  prompt "Set a password for postmaster email." PMPWD
  stty echo
  echo ""
  echo ""
  echo " The system will be configured as follows:"
  echo ""
  echo "               Your Username: $USERNAME"
  echo "        Your User & Group ID: $GUID"
  echo "                    SSH Port: $SSHPORT"
  echo "             Host Short Name: $HOSTNAME"
  echo "                      Domain: $DOMAIN"
  echo " Fully Qualified Domain Name: $HOSTNAME.$DOMAIN"
  echo "  Server Administrator Email: $ADMIN"
  if [ -z "$PASSWD" ]; then
    echo "   MySQL mail_admin Password: <UNSET>"
  else
    echo "   MySQL mail_admin Password: *****"
  fi
  if [ -z "$PMPWD" ]; then
    echo "  Postmaster E-mail Password: <UNSET>"
  else
    echo "  Postmaster E-mail Password: *****"
  fi
  echo ""
  echo ""
  echo "Is the above information correct?"
  select yn in "Yes" "No"; do
    case $yn in
      Yes ) echo ""
      echo "Are you sure you wish to proceed?"
            select final in "Yes" "No"; do
              case $final in
                Yes ) CONFIRM="yes"; echo ""; break;;
                No ) echo ""; exit 0; break;;
              esac
            done
            break;;
      No ) CONFIRM="no"; break;;
    esac
  done
done

##########
# Run It #
##########

# enable rpmforge
rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt
rpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm

# patch update and install needed packages
yum -y update
yum -y install man wget vim telnet crypto-utils mod_ssl tree bind-utils ntp httpd mysql-server php php-mysql postfix dovecot dovecot-mysql mailx sudo git ruby rubygems setroubleshoot amavisd-new clamav clamav-devel clamd spamassassin

# setup hostname
sed -i "s/\(^HOSTNAME=\).*/\1${HOSTNAME}/" /etc/sysconfig/network
hostname $HOSTNAME
echo -e "${ADDRESS}\t${HOSTNAME}.${DOMAIN} mail.${DOMAIN} ${HOSTNAME}" >> /etc/hosts

# setup user accounts
useradd -u $GUID -d /home/$USERNAME/ -m -U -s /bin/bash $USERNAME
useradd -u 5000 -d /var/mail/vhosts/ -m -U -s /sbin/nologin vmail
groupmems -a $USERNAME -g wheel
echo "In the following screen, uncomment the line:"
echo "  # %wheel  ALL=(ALL) NOPASSWD: ALL"
echo "Press any key to begin."
read -n 1
visudo
echo "Set a password for $USERNAME."
passwd $USERNAME

# dotfiles
installTemplate bashrc ~/.bashrc DEFAULT
installTemplate bashrc /home/$USERNAME/.bashrc DEFAULT
# vim files !!

# configure ssh
echo "" >> /etc/ssh/sshd_config
echo "# Customizations" >> /etc/ssh/sshd_config
echo "AllowUsers $USERNAME" >> /etc/ssh/sshd_config
echo "Port $SSHPORT" >> /etc/ssh/sshd_config
echo "PermitRootLogin no" >> /etc/ssh/sshd_config

# configure iptables
chkconfig iptables on
installTemplate iptables /etc/sysconfig/iptables FULL
if [ $SSHPORT != '22' ]; then
  sed -i "s/--dport ssh/--dport ${SSHPORT}/g" /etc/sysconfig/iptables
fi

# enable selinux
sed -i "s/\(SELINUX=\).*$/\1enforcing/" /etc/sysconfig/selinux
sed -i "s/\(SELINUXTYPE=\).*$/\1targeted/" /etc/sysconfig/selinux
[ $SSHPORT != 'ssh' ] && {
  semanage port -a -t ssh_port_t -p tcp $SSHPORT
}
touch /.autorelabel

# configure mysql
chkconfig mysqld on
service mysqld start
mysql_secure_installation
sed -i 's/\[mysqld\]/&\nbind-address=127.0.0.1/' /etc/my.cnf

# configure ntp
NTPSERVER=`cat /etc/ntp.conf | sed -n 's/^server //p' | head -1`
chkconfig ntpd on
ntpdate $NTPSERVER

# configure php
mv /etc/php.d/sqlite3.ini /etc/php.d/sqlite3.disable
mv /etc/php.d/pdo_sqlite.ini /etc/php.d/pdo_sqlite.disable
mv /etc/php.d/curl.ini /etc/php.d/curl.disable
installTemplate php.ini /etc/php.ini

# configure apache
chkconfig httpd on
installTemplate httpd.conf /etc/httpd/conf/httpd.conf
installTemplate vhost.conf /etc/httpd/conf.d/$DOMAIN.conf
sed -i "s/\(^ServerAdmin \).*/\1${ADMIN}/" /etc/httpd/conf/httpd.conf
sed -i "s/virtualdomain.com/${DOMAIN}/g" /etc/httpd/conf.d/$DOMAIN.conf
mkdir /var/www/html/$DOMAIN

# configure postfix
chkconfig postfix on
QUERY1="CREATE DATABASE IF NOT EXISTS mail;"
QUERY2="GRANT ALL ON mail.* TO 'mail_admin'@'localhost' IDENTIFIED BY '$PASSWD';"
QUERY3="FLUSH PRIVILEGES;"
SQL="${QUERY1}${QUERY2}${QUERY3}"
echo "Logging in to mysql as root..."
mysql -u root -p -e "$SQL"
mysql -u mail_admin -p$PASSWD mail < $CURRDIR/templates/mail.isam.sql
installTemplate main.cf /etc/postfix/main.cf
installTemplate master.cf /etc/postfix/master.cf
installTemplate mysql_virtual_domains.cf /etc/postfix/mysql_virtual_domains.cf
installTemplate mysql_virtual_forwardings.cf /etc/postfix/mysql_virtual_forwardings.cf
installTemplate mysql_virtual_mailboxes.cf /etc/postfix/mysql_virtual_mailboxes.cf
installTemplate mysql_virtual_mailbox_limits.cf /etc/postfix/mysql_virtual_mailbox_limits.cf
installTemplate mysql_virtual_transports.cf /etc/postfix/mysql_virtual_transports.cf
#sed -i "s/\(^myhostname = \).*$/\1${HOSTNAME}.${DOMAIN}/" /etc/postfix/main.cf
sed -i "s/\(^myhostname = \).*$/\1mail.${DOMAIN}/" /etc/postfix/main.cf
sed -i "s/\(^mydomain = \).*$/\1${DOMAIN}/" /etc/postfix/main.cf
#sed -i "s/mail.example.com/${HOSTNAME}.${DOMAIN}/" /etc/postfix/main.cf
sed -i "s/mail.example.com/mail.${DOMAIN}/" /etc/postfix/main.cf
sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_domains.cf
sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_forwardings.cf
sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_mailboxes.cf
sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_mailbox_limits.cf
sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_transports.cf

# configure dovecot
chkconfig dovecot on
sed -i 's/^#\(protocols = \).*$/\1imap/' /etc/dovecot/dovecot.conf
installTemplate dovecot.conf /etc/dovecot/dovecot.conf
installTemplate 10-auth.conf /etc/dovecot/conf.d/10-auth.conf
installTemplate 10-mail.conf /etc/dovecot/conf.d/10-mail.conf
installTemplate 10-master.conf /etc/dovecot/conf.d/10-master.conf
installTemplate 10-ssl.conf /etc/dovecot/conf.d/10-ssl.conf
installTemplate 20-imap.conf /etc/dovecot/conf.d/20-imap.conf
installTemplate 20-pop3.conf /etc/dovecot/conf.d/20-pop3.conf
installTemplate 90-quota.conf /etc/dovecot/conf.d/90-quota.conf
installTemplate auth-sql.conf.ext /etc/dovecot/conf.d/auth-sql.conf.ext
installTemplate dovecot-dict-sql.conf.ext /etc/dovecot/dovecot-dict-sql.conf.ext
installTemplate dovecot-sql.conf.ext /etc/dovecot/dovecot-sql.conf.ext
#sed -i "s/mail.example.com/${HOSTNAME}.${DOMAIN}/g" /etc/dovecot/conf.d/10-ssl.conf
sed -i "s/mail.example.com/mail.${DOMAIN}/g" /etc/dovecot/conf.d/10-ssl.conf
sed -i "s/\(password=\)password/\1${PASSWD}/" /etc/dovecot/dovecot-dict-sql.conf.ext
sed -i "s/\(password=\)password/\1${PASSWD}/" /etc/dovecot/dovecot-sql.conf.ext

# configure clamav
sed -i 's/^TCPSocket.*$/#&/' /etc/clamd.conf
freshclam

# configure amavisd-new
#sed -i "s/host.example.com/${HOSTNAME}.${DOMAIN}/g" /etc/amavisd.conf
sed -i "s/host.example.com/mail.${DOMAIN}/g" /etc/amavisd.conf
sed -i "s/example.com/${DOMAIN}/g" /etc/amavisd.conf
sed -i "s/^# \(\$MYHOME = .*$\)/\1/" /etc/amavisd.conf
sed -i "s/^# \(\$helpers_home = .*$\)/\1/" /etc/amavisd.conf
sed -i "s/^# \(\$lock_file = .*$\)/\1/" /etc/amavisd.conf
sed -i "s/^# \(\$lock_file = .*$\)/\1/" /etc/amavisd.conf
sed -i "s/^# \(\$pid_file  = .*$\)/\1/" /etc/amavisd.conf
sed -i "s/^# \(\$myhostname = .*$\)/\1/" /etc/amavisd.conf
sed -i "s/virusalert/postmaster/g" /etc/amavisd.conf
sed -i "s/spam.police/postmaster/g" /etc/amavisd.conf
sed -i "s/var\/run\/clamav\/clamd/&.sock/" /etc/amavisd.conf
sed -i "s/^#\( \['ClamAV.*$\)/ \1/" /etc/amavisd.conf
sed -i "s/^#\(.*clamd.sock.*$\)/ \1/" /etc/amavisd.conf
sed -i "s/^#\(   qr..bOK.*$\)/ \1/" /etc/amavisd.conf
sed -i "s/^#\(   qr\/^\.\*?:.*\)/ \1/" /etc/amavisd.conf

# create a postmaster account
stty -echo
CRAMPMPWD=`doveadm pw -p $PMPWD`
stty echo
QUERY1="USE mail;"
QUERY2="INSERT INTO domains VALUES ('${DOMAIN}');"
QUERY3="INSERT INTO users VALUES ('postmaster@${DOMAIN}','${CRAMPMPWD}','524288000');"
QUERY4="FLUSH PRIVILEGES;"
SQL="${QUERY1}${QUERY2}${QUERY3}${QUERY4}"
mysql -u mail_admin -p$PASSWD -e "$SQL"

# generate cert and key
#genkey --days 365 $HOSTNAME.$DOMAIN
genkey --days 365 mail.$DOMAIN

# reboot the system
echo "Configuration is complete and the system needs to reboot."
echo "Press any key to continue..."
read -n 1
init 6
exit 0

# AFTER REBOOT TASK LIST
# check for selinux failures by running in permissive mode??
# setup mail users
# setup virtualhosts
# check hostname with hostname
# check ntp is running and synced with ntpstat
# check selinux is on with sestatus
# telnet and openssl to check mail server
# check logs for errors
