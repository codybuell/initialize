#!/bin/bash
#
# Initialize
#
# Configuration script for linux systems to setup a web and mail server hosting
# multiple domains.  The script is currently built specifically for CentOS 6.3,
# though it could easily be adapted for other linux distributions and versions.
# The goal is a lightweight, fast and secure server configured in minutes.
#
# Author(s): Cody Buell
#
# Revisions: 2012.10.20 Initial framework.
#
# Requisite: CentOS 6.3
#            DNS Configured with FQDN
#               domain.com
#               host.domain.com
#               mail.domain.com
#            Configured IP with internet access
#
# Resources: <http://www.postfix.org/>
#            <http://www.dovecot.org/>
#            <http://www.apache.org/>
#            <http://www.centos.org/>
#            <http://wiki.centos.org/HowTos/postfix_sasl>
#            <http://wiki.centos.org/AdditionalResources/Repositories/RPMForge>
#            <http://wiki.centos.org/HowTos/Amavisd>
#            <http://wiki.mediatemple.net/w/(ve):Install_Postfix_with_Dovecot_on_CentOS>
#            <http://www.howtoforge.com/virtual-users-and-domains-with-postfix-courier-mysql-and-squirrelmail-centos-6.2-x86_64>
#
# Task List: - create script to generate virtualhost (conf file, doc root, hosts file, certs)
#            - create script to manage email accounts
#            - utilize whiptail and add choice of what components to install
#            - improve comments in script and templates, simplify templates
#            - yum removes? network manager? managers?
#            - add 'active' column in mysql users table and where clause in
#              postfix and dovecot sql access files then test
#            - need to be able to setup visudo without interaction...
#            - log all output from script to new log file
#            - create a text file or output when first logging in that gives details on how to
#              access administrator email account
#            - send a welcome email to administrator with server configuration info
#            - add some useful dotfiles?  vim git etc... history length...
#            - add pyzor and dcc
#            - run a check on the rpmforge package??
#            - secure mysql without interaction?
#            - fix the first cert you get when setting up a mail account, localhost.localdomain
#            - see if there is a way to flush administrator email when it gets full, delete one for one received?
#            - setup quota warning emails to administrator in 90-quota.conf dovecot config

####################
# Helper Functions #
####################

checks () {                                   # args: user path 'distros'
  DIE=false                                   # default no errors

  # check run location
  FUN=$(basename $0)                          # get function name
  LOC=`echo $0 | sed "s/${FUN}//"`            # get current location
  [ "$0" != $2/$(basename $0) ] && {          # check for correct path
    echo "error: $FUN must be run from $LOC"  # wrong path error message
    DIE=true                                  # register errors
  }

  # check current user
  [ `whoami` != $1 ] && {                     # check for correct user
    echo "error: $FUN must be run as $1"      # wrong user error message
    DIE=true                                  # register errors
  }

  # distro detection
  if [ -f /etc/redhat-release ]; then
    DIST=`head -1 /etc/redhat-release | awk '{print $1}'`
    RELS=`head -1 /etc/redhat-release | sed -e 's/[^0-9.]//g'`
    BITS=`uname -i`
    PMAN='yum'
  elif [ -f /etc/debian_version ]; then
    DIST=`lsb_release -s -d | awk '{print $1}'`
    RELS=`lsb_release -s -d | sed -e 's/[^0-9.]//g'`
    BITS=`uname -m`
    PMAN='apt-get'
  fi
  NAME="$DIST $RELS"
  if grep -q "$NAME" <<< "$3"; then
    NAME=
  else
    echo "error: $NAME is currently not supported"
    DIE=true
  fi

  if $DIE; then                               # if error found then...
    exit 1                                    # drop out of script
  fi
}

prompt () {                           # args: 'prompt string' VARIABLE
  eval DEFAULT=\$$2                   # references an external default variable
  read -p "$1 [$DEFAULT] " NEWVALUE   # read answer into a temporary variable
  eval $2=${NEWVALUE:-$DEFAULT}       # param expan if null or unset use default
}

installTemplate () {                          # args: template target [chunk]
  TEM="$CURRDIR/templates/$1"                 # set template path
  cp -a $2 $2.orig                            # creat backup of original file
  if [ -z "$3" ]; then                        # if no chunk defined then...
    \cp $TEM $2                               # replace with the whole template
  else                                        # but if chunk is defined
    sed -n "/<${3}>/,/<\/${3}>/p" $TEM > $2   # replace with template chunk
    sed -i "/<${3}>/d;/<\/${3}>/d" $2         # clear out the tags
  fi
}

###########################
# Configuration Functions #
###########################

rpmforgeEnable () {
  rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt
  rpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm
}

updateSystem () {
  yum -y update
}

installPackages () {
  yum -y install man wget vim telnet crypto-utils mod_ssl tree bind-utils ntp httpd mysql-server php php-mysql postfix dovecot dovecot-mysql mailx sudo git ruby rubygems setroubleshoot amavisd-new clamav clamav-devel clamd spamassassin
}

configureHostname () {
  sed -i "s/\(^HOSTNAME=\).*/\1${HOSTNAME}/" /etc/sysconfig/network
  hostname $HOSTNAME
  echo -e "${ADDRESS}\t${HOSTNAME}.${DOMAIN} mail.${DOMAIN} ${DOMAIN} ${HOSTNAME}" >> /etc/hosts
}

configureAccounts () {
  useradd -u $GUID -d /home/$USERNAME/ -m -U -s /bin/bash $USERNAME
  useradd -u 5000 -d /var/mail/vhosts/ -m -U -s /sbin/nologin vmail
  groupmems -a $USERNAME -g wheel
  echo "In the following screen, uncomment the line:"
  echo "  # %wheel  ALL=(ALL) NOPASSWD: ALL"
  echo "Press any key to begin."
  read -n 1
  visudo
  echo "Set a password for $USERNAME."
  passwd $USERNAME
}

dotfiles () {
  installTemplate bashrc ~/.bashrc DEFAULT
  installTemplate bashrc /home/$USERNAME/.bashrc DEFAULT
}

configureSSH () {
  echo "" >> /etc/ssh/sshd_config
  echo "# Customizations" >> /etc/ssh/sshd_config
  echo "AllowUsers $USERNAME" >> /etc/ssh/sshd_config
  echo "Port $SSHPORT" >> /etc/ssh/sshd_config
  echo "PermitRootLogin no" >> /etc/ssh/sshd_config
}

configureFirewall () {
  chkconfig iptables on
  installTemplate iptables /etc/sysconfig/iptables FULL
  if [ $SSHPORT != '22' ]; then
    sed -i "s/--dport ssh/--dport ${SSHPORT}/g" /etc/sysconfig/iptables
  fi
}

configureSELinux () {
  sed -i "s/\(SELINUX=\).*$/\1enforcing/" /etc/sysconfig/selinux
  sed -i "s/\(SELINUXTYPE=\).*$/\1targeted/" /etc/sysconfig/selinux
  [ $SSHPORT != 'ssh' ] && {
    semanage port -a -t ssh_port_t -p tcp $SSHPORT
  }
  touch /.autorelabel
}

configureMySQL () {
  chkconfig mysqld on
  service mysqld start
  mysql_secure_installation
  sed -i 's/\[mysqld\]/&\nbind-address=127.0.0.1/' /etc/my.cnf
}

configureNTP () {
  NTPSERVER=`cat /etc/ntp.conf | sed -n 's/^server //p' | head -1`
  chkconfig ntpd on
  ntpdate $NTPSERVER
}

configurePHP () {
  mv /etc/php.d/sqlite3.ini /etc/php.d/sqlite3.disable
  mv /etc/php.d/pdo_sqlite.ini /etc/php.d/pdo_sqlite.disable
  mv /etc/php.d/curl.ini /etc/php.d/curl.disable
  installTemplate php.ini /etc/php.ini
}

configureApache () {
  mkdir /etc/httpd/vhost.d
  mkdir -p /var/www/vhosts/$DOMAIN
  chkconfig httpd on
  installTemplate httpd.conf /etc/httpd/conf/httpd.conf
  installTemplate vhost.conf /etc/httpd/vhost.d/$DOMAIN.conf
  installTemplate index.php /var/www/vhosts/$DOMAIN/index.php
  installTemplate index.php /var/www/html/index.php
  installTemplate ssl.conf /etc/httpd/conf.d/ssl.conf
  sed -i "s/\(^ServerAdmin \).*/\1${ADMIN}/" /etc/httpd/conf/httpd.conf
  sed -i "s/virtualdomain.com/${DOMAIN}/g" /etc/httpd/vhost.d/$DOMAIN.conf
  sed -i "s/EXAMPLE/${DOMAIN}/g" /var/www/vhosts/$DOMAIN/index.php
  sed -i "s/EXAMPLE/${HOSTNAME}/g" /var/www/html/index.php
}

configurePostfix () {
  chkconfig postfix on
  QUERY1="CREATE DATABASE IF NOT EXISTS mail;"
  QUERY2="GRANT ALL ON mail.* TO 'mail_admin'@'localhost' IDENTIFIED BY '$PASSWD';"
  QUERY3="FLUSH PRIVILEGES;"
  SQL="${QUERY1}${QUERY2}${QUERY3}"
  echo "Logging in to mysql as root..."
  mysql -u root -p -e "$SQL"
  mysql -u mail_admin -p$PASSWD mail < $CURRDIR/templates/mail.isam.sql
  installTemplate main.cf /etc/postfix/main.cf
  installTemplate master.cf /etc/postfix/master.cf
  installTemplate mysql_virtual_domains.cf /etc/postfix/mysql_virtual_domains.cf
  installTemplate mysql_virtual_forwardings.cf /etc/postfix/mysql_virtual_forwardings.cf
  installTemplate mysql_virtual_mailboxes.cf /etc/postfix/mysql_virtual_mailboxes.cf
  installTemplate mysql_virtual_mailbox_limits.cf /etc/postfix/mysql_virtual_mailbox_limits.cf
  installTemplate mysql_virtual_transports.cf /etc/postfix/mysql_virtual_transports.cf
  sed -i "s/example.com/${DOMAIN}/" /etc/postfix/main.cf
  sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_domains.cf
  sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_forwardings.cf
  sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_mailboxes.cf
  sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_mailbox_limits.cf
  sed -i "s/\(^password = \).*$/\1${PASSWD}/" /etc/postfix/mysql_virtual_transports.cf
}

configureDovecot () {
  chkconfig dovecot on
  sed -i 's/^#\(protocols = \).*$/\1imap/' /etc/dovecot/dovecot.conf
  installTemplate dovecot.conf /etc/dovecot/dovecot.conf
  installTemplate 10-auth.conf /etc/dovecot/conf.d/10-auth.conf
  installTemplate 10-mail.conf /etc/dovecot/conf.d/10-mail.conf
  installTemplate 10-master.conf /etc/dovecot/conf.d/10-master.conf
  installTemplate 10-ssl.conf /etc/dovecot/conf.d/10-ssl.conf
  installTemplate 20-imap.conf /etc/dovecot/conf.d/20-imap.conf
  installTemplate 20-pop3.conf /etc/dovecot/conf.d/20-pop3.conf
  installTemplate 90-quota.conf /etc/dovecot/conf.d/90-quota.conf
  installTemplate auth-sql.conf.ext /etc/dovecot/conf.d/auth-sql.conf.ext
  installTemplate dovecot-dict-sql.conf.ext /etc/dovecot/dovecot-dict-sql.conf.ext
  installTemplate dovecot-sql.conf.ext /etc/dovecot/dovecot-sql.conf.ext
  sed -i "s/example.com/${DOMAIN}/g" /etc/dovecot/conf.d/10-ssl.conf
  sed -i "s/\(password=\)password/\1${PASSWD}/" /etc/dovecot/dovecot-dict-sql.conf.ext
  sed -i "s/\(password=\)password/\1${PASSWD}/" /etc/dovecot/dovecot-sql.conf.ext
}

configureClamAV () {
  sed -i 's/^TCPSocket.*$/#&/' /etc/clamd.conf
  freshclam
}

configureAmavis () {
  sed -i "s/host.example.com/mail.${DOMAIN}/g" /etc/amavisd.conf
  sed -i "s/example.com/${DOMAIN}/g" /etc/amavisd.conf
  sed -i "s/^# \(\$MYHOME = .*$\)/\1/" /etc/amavisd.conf
  sed -i "s/^# \(\$helpers_home = .*$\)/\1/" /etc/amavisd.conf
  sed -i "s/^# \(\$lock_file = .*$\)/\1/" /etc/amavisd.conf
  sed -i "s/^# \(\$lock_file = .*$\)/\1/" /etc/amavisd.conf
  sed -i "s/^# \(\$pid_file  = .*$\)/\1/" /etc/amavisd.conf
  sed -i "s/^# \(\$myhostname = .*$\)/\1/" /etc/amavisd.conf
  sed -i "s/virusalert/administrator/g" /etc/amavisd.conf
  sed -i "s/spam.police/administrator/g" /etc/amavisd.conf
  sed -i "s/var\/run\/clamav\/clamd/&.sock/" /etc/amavisd.conf
  sed -i "s/^#\( \['ClamAV.*$\)/ \1/" /etc/amavisd.conf
  sed -i "s/^#\(.*clamd.sock.*$\)/ \1/" /etc/amavisd.conf
  sed -i "s/^#\(   qr..bOK.*$\)/ \1/" /etc/amavisd.conf
  sed -i "s/^#\(   qr\/^\.\*?:.*\)/ \1/" /etc/amavisd.conf
}

configureMailAccounts () {
  stty -echo
  CRAMADMPWD=`doveadm pw -p $PMPWD`
  stty echo
  QUERY1="USE mail;"
  QUERY2="INSERT INTO domains VALUES ('${DOMAIN}');"
  QUERY3="INSERT INTO users VALUES ('administrator@${DOMAIN}','${CRAMADMPWD}','524288000');"
  QUERY4="INSERT INTO forwardings VALUES ('webmaster@${DOMAIN}','administrator@${DOMAIN}');"
  QUERY5="INSERT INTO forwardings VALUES ('postmaster@${DOMAIN}','administrator@${DOMAIN}');"
  QUERY6="INSERT INTO forwardings VALUES ('root@${DOMAIN}','administrator@${DOMAIN}');"
  SQL="${QUERY1}${QUERY2}${QUERY3}${QUERY4}${QUERY5}${QUERY6}"
  mysql -u mail_admin -p$PASSWD -e "$SQL"
}

generateKeys () {
  genkey --days 365 $DOMAIN
}

rebootSystem () {
  echo "Configuration is complete and the system needs to reboot."
  echo "Press any key to continue..."
  read -n 1
  init 6
  exit 0
}

##################
# Initial Checks #
##################

# check user and run path
checks root . 'CentOS 6.3'

# potential solution for distro specific runs...
# if [ $DIST == 'CentOS' ]; then
#   case $RELS in
#     6.3 ) yum -y install blablabla; break;;
#     * ) yum -y install blablabla;;
#   esac
# elif [ $DIST == 'Red']; then
#   case $RELS in
#     6.3 ) break;;
#     * ) ;;
#   esac
# elif [ $DIST == 'Ubuntu']; then
#   case $RELS in
#     * ) apt-get install blablabla;;
#   esac
# fi

#######################
# Establish Variables #
#######################

CURRDIR=`pwd`
ADDRESS=`ifconfig | grep 'inet addr:' | grep -v '127.0.0.1' | cut -d: -f2 | awk 'NR==1 {print $1}'`
CONFIRM='no'
PS3='Enter Number > '

# setup a decent environment
export EDITOR='vi'

# establish defaults
USERNAME='admin'              # administrators account with sudo
GUID='615'                    # group and user id for admin
SSHPORT='22'                  # port to allow ssh in on
DOMAIN='example.com'          # primary domain name
PASSWD=''                     # mysql mail_admin password
PMPWD=''                      # administrator email password
#MAILDIR='/var/mail/vhosts'   # add as option later
#VWEBDIR='/var/www/vhosts'    # add as option later
#SWEBDIR='/var/www/html'      # add as option later
#SERVICES='imap'              # add as option later (imap pop3)

# prompts
while [ $CONFIRM == "no" ]; do
  clear
  prompt "What username would you like?" USERNAME
  prompt "What is $USERNAME's uid and gid?" GUID
  prompt "What port would you like to use for ssh?" SSHPORT
  prompt "What is this systems short name?" HOSTNAME
  prompt "What is this systems domain name?" DOMAIN
  ADMIN="administrator@$DOMAIN"
  stty -echo
  prompt "Set a password for mysql mail_admin." PASSWD
  echo ""
  prompt "Set a password for administrator email." PMPWD
  stty echo
  echo ""
  echo ""
  echo " The system will be configured as follows:"
  echo ""
  echo "               Your Username: $USERNAME"
  echo "        Your User & Group ID: $GUID"
  echo "                    SSH Port: $SSHPORT"
  echo "             Host Short Name: $HOSTNAME"
  echo "                      Domain: $DOMAIN"
  echo " Fully Qualified Domain Name: $HOSTNAME.$DOMAIN"
  echo "  Server Administrator Email: $ADMIN"
  if [ -z "$PASSWD" ]; then
    echo "   MySQL mail_admin Password: <UNSET>"
  else
    echo "   MySQL mail_admin Password: *****"
  fi
  if [ -z "$PMPWD" ]; then
    echo "  Postmaster E-mail Password: <UNSET>"
  else
    echo "  Postmaster E-mail Password: *****"
  fi
  echo ""
  echo ""
  echo "Is the above information correct?"
  select yn in "Yes" "No"; do
    case $yn in
      Yes ) echo ""
      echo "Are you sure you wish to proceed?"
            select final in "Yes" "No"; do
              case $final in
                Yes ) CONFIRM="yes"; echo ""; break;;
                No ) echo ""; exit 0; break;;
              esac
            done
            break;;
      No ) CONFIRM="no"; break;;
    esac
  done
done

##########
# Run It #
##########

rpmforgeEnable
updateSystem
installPackages
configureHostname
configureAccounts
dotfiles
configureSSH
configureFirewall
configureSELinux
configureMySQL
configureNTP
configurePHP
configureApache
configurePostfix
configureDovecot
configureClamAV
configureAmavis
configureMailAccounts
generateKeys
rebootSystem
